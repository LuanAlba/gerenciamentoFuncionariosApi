// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gerenciamentoFuncionariosApi.DataContext;

#nullable disable

namespace gerenciamentoFuncionariosApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240919204453_AjusteRelacaoRegrasPtTres")]
    partial class AjusteRelacaoRegrasPtTres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.CargoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique()
                        .HasFilter("[FuncionarioId] IS NOT NULL");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.FuncionarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Admissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salario")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.Endereco", b =>
                {
                    b.HasOne("gerenciamentoFuncionariosApi.Models.FuncionarioModel", null)
                        .WithOne("Endereco")
                        .HasForeignKey("gerenciamentoFuncionariosApi.Models.Endereco", "FuncionarioId");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.FuncionarioModel", b =>
                {
                    b.HasOne("gerenciamentoFuncionariosApi.Models.CargoModel", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoId");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.CargoModel", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("gerenciamentoFuncionariosApi.Models.FuncionarioModel", b =>
                {
                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
